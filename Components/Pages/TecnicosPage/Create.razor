@page "/Tecnicos/Create"
@using RegistroTecnicos.Service
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TipoTecnicoService tipotecnicoService
@inject NavigationManager navigation

<PageTitle>Crear Técnico</PageTitle>
<EditForm Model="tecnico" OnValidSubmit="CrearTecnico">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card">
            <div class="card-header bg-success text-white">
                <h3 class="bi bi-plus-square-fill"> Crear Técnico</h3>
            </div>
            <div class="card-body">
                <div class="mb-3">

                    <label for="TecNombre" class="form-label">Nombre:</label>
                    <InputText id="TecNombre" class="form-control" @bind-Value="tecnico.TecNombre"></InputText>
                    <ValidationMessage For="@(()=>tecnico.TecNombre)"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="TecSueldoHora" class="form-label">Sueldo por Hora:</label>
                    <InputNumber id="TecSueldoHora" class="form-control" @bind-Value="tecnico.TecSueldoHora"></InputNumber>
                    <ValidationMessage For="@(()=>tecnico.TecSueldoHora)"></ValidationMessage>

                    <label class="form-label">Tipo tecnico</label>
                    <InputSelect @bind-Value="tecnico.TipoTecnicoId" class="form-control">
                        <option value="0">Seleccione el tipo de t&eacute;cnico</option>
                        @foreach (var tipo in ListaTipos)
                        {
                            <option value="@tipo.TipoTecnicoId">@tipo.Descripcion</option>
                        }
                    </InputSelect>
                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-success bi bi-check-circle"> Guardar</button>
                    <button type="button" class="btn btn-secondary bi bi-x-circle" @onclick="Cancelar"> Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Tecnicos tecnico = new Tecnicos();
    public List<TipoTecnico> ListaTipos { get; set; } = new List<TipoTecnico>();



    protected override async Task OnInitializedAsync()
    {
        ListaTipos = await tipotecnicoService.Listar(t => true);

    }

    //Metodo para validar atributos tecnicos(nombre,sueldo)
    public async Task<bool> Validar()
    {
        var tecnicoExiste = await tecnicoService.EncontrarNombre(tecnico.TecNombre);
        return tecnicoExiste == null;
    }



    private async Task CrearTecnico()
    {
        if (await Validar())
        {
            await tecnicoService.Guardar(tecnico);
            tecnico = new Tecnicos();
            navigation.NavigateTo("/Tecnicos/Index");

        }

    }

    private void Cancelar()
    {
        navigation.NavigateTo("/Tecnicos/Index");
    }
}