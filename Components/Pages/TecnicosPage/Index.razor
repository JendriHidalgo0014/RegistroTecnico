@page "/Tecnicos/Index"
@using RegistroTecnicos.Service
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation
@inject TipoTecnicoService tipotecnicoService

<PageTitle>Tecnicos</PageTitle>
<div class="container">
    <div class="card-header bg-dark text-white">
        <h3 class="bi bi-person-fill"><strong> Registro de T&eacute;cnicos</strong></h3>
    </div>
    <div class="row text-left">
        <div class="col-md-3">
            <label for="filtro" class="form-label"><strong>Filtrar por:</strong></label>
            <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                <option value="id">ID</option>
                <option value="Nombre">Nombre</option>
                <option value="SueldoHora">Sueldo por Hora</option>
                <option value="Descricpion">Descripcion</option>

            </InputSelect>
        </div>
        <div class="col-md-6">
            <label for="valorFiltro" class="form-label"><strong>B&uacute;squeda:</strong></label>
            <div class="input-group">
                <InputText id="valorFiltro" @bind-Value="valorFiltro" class="form-control" placeholder="Buscar" />
                <button @onclick="Buscar" class="btn btn-warning bi bi-search" type="button"> Buscar</button>
            </div>
        </div>
        <div class="col-md-3 d-flex align-items-end justify-content-md-end mt-3 mt-md-0">
            <a href="/Tecnicos/Create" class="btn btn-warning bi bi-plus-square-fill"> Crear</a>
        </div>
    </div>

    <div class="card-body">
        <table class="table table-light">
            <thead class="table table-striped text-center table-bordered mt-3 bg-dark text-white">
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>SueldoHora</th>
                    <th>Descripcion</th>
                    <th>Detalles</th>
                    <th>Modificar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tecnico in tecnicos)
                {
                    var tiposDeTecnicos = ListaTipoTec.FirstOrDefault(t => t.TipoTecnicoId == tecnico.TipoTecnicoId);
                    <tr>
                        <td class="text-center">@tecnico.TecnicoId</td>
                        <td class="text-center">@tecnico.TecNombre</td>
                        <td class="text-center">@tecnico.TecSueldoHora</td>
                        <td class="text-center">@(tiposDeTecnicos?.Descripcion)</td>

                        <td class="text-center">
                            <a href="/Tecnicos/Details/@tecnico.TecnicoId" class="btn btn-info text-white bi bi-eye-fill"></a>
                        </td>
                        <td class="text-center">
                            <a href="/Tecnicos/Edit/@tecnico.TecnicoId" class="btn btn-secondary text-white bi bi-pencil-fill"></a>
                        </td>
                        <td class="text-center">
                            <a href="/Tecnicos/Delete/@tecnico.TecnicoId" class="btn btn-danger bi bi-trash2-fill"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    public List<Tecnicos> tecnicos = new List<Tecnicos>();
    public List<TipoTecnico> ListaTipoTec { get; set; } = new List<TipoTecnico>();
    public string filtro = "id";
    public string valorFiltro = "";

    public Index()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        tecnicos = await tecnicoService.Listar(t => true);
        ListaTipoTec = await tipotecnicoService.Listar(a => true);
    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int TecnicoId))
            {
                tecnicos = await tecnicoService.Listar(t => t.TecnicoId == TecnicoId);
            }
            else if (filtro == "Nombres")
            {
                tecnicos = await tecnicoService.Listar(t => t.TecNombre.ToLower().Contains(valorFiltro.ToLower()));
            }
            else if (filtro == "SueldoHora" && decimal.TryParse(valorFiltro, out decimal SueldoHora))
            {
                tecnicos = await tecnicoService.Listar(t => t.TecSueldoHora == SueldoHora);
            }
            else if (filtro == "Descripcion")
            {
                var iguales = await tipotecnicoService.Listar(t => t.Descripcion.ToLower().Contains(valorFiltro.ToLower()));
                var idIgual = iguales.Select(t => t.TipoTecnicoId).ToList();
                tecnicos = await tecnicoService.Listar(t => idIgual.Contains(t.TipoTecnicoId));
            }
        }
        else
        {
            tecnicos = await tecnicoService.Listar(t => true);
        }
    }
}



