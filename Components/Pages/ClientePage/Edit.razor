@page "/Cliente/Edit/{id:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject ClienteService clienteService
@inject NavigationManager navigation

<PageTitle>Editar Cliente</PageTitle>

<div class="container">
    <div class="card">
        <div class="card-header bg-secondary text-white">
            <h3 class="bi bi-pencil-square"> Editar Técnico</h3>
        </div>
        <div class="card-body">
            <EditForm Model="@cliente" OnValidSubmit="GuardarCambios">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="Nombres" class="form-label">Nombre:</label>
                    <InputText id="Nombres" class="form-control" @bind-Value="cliente.Nombres" />
                </div>
                <div class="mb-3">
                    <label for="WhatsApp" class="form-label">WhatsApp:</label>
                    <InputNumber id="WhatsApp" class="form-control" @bind-Value="cliente.WhatsApp" />
                </div>
                <button type="submit" class="btn btn-success bi bi-check-circle"> Guardar</button>
                <button type="button" class="btn btn-secondary bi bi-x-circle" @onclick="Cancelar"> Cancelar</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }
    private Cliente cliente = new Cliente();

    protected override async Task OnInitializedAsync()
    {
        cliente = await clienteService.Buscar(id);
    }

    private async Task GuardarCambios()
    {
        await clienteService.Guardar(cliente);
        navigation.NavigateTo("/Cliente/Index");
    }

    private void Cancelar()
    {
        navigation.NavigateTo("/Cliente/Index");
    }
}
