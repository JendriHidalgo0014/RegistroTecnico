@page "/TipoTecnico/Edit/{id:int}"
@rendermode InteractiveServer
@inject TipoTecnicoService tipotecnicoService
@inject NavigationManager navigation

<PageTitle>Editar Tipo T&eacute;cnico</PageTitle>

<div class="container">
    <div class="card">
        <div class="card-header bg-secondary text-white">
            <h3 class="bi bi-pencil-square"> Editar Tipo de T&eacute;cnico</h3>
        </div>
        <div class="card-body">
            <EditForm Model="@tipoTecnico" OnValidSubmit="GuardarCambios">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="Descripcion" class="form-label">Descripción:</label>
                    <InputText id="Descripcion" class="form-control" @bind-Value="tipoTecnico.Descripcion" />
                </div>
                <button type="submit" class="btn btn-success bi bi-check-circle"> Guardar</button>
                <button type="button" class="btn btn-secondary bi bi-x-circle" @onclick="Cancelar"> Cancelar</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }
    private TipoTecnico tipoTecnico = new TipoTecnico();

    protected override async Task OnInitializedAsync()
    {
        tipoTecnico = await tipotecnicoService.Buscar(id);
    }

    private async Task GuardarCambios()
    {
        await tipotecnicoService.Guardar(tipoTecnico);
        navigation.NavigateTo("/TipoTecnico/Index");
    }

    private void Cancelar()
    {
        navigation.NavigateTo("/TipoTecnico/Index");
    }
}

