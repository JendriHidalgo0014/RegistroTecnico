@page "/TipoTecnico/Create"
@rendermode InteractiveServer
@inject TipoTecnicoService tipotecnicoService
@inject NavigationManager navigation

<PageTitle>Crear Tipo de T&eacute;cnico</PageTitle>
<EditForm Model="tipoTecnico" OnValidSubmit="CrearTipoTecnico">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card">
            <div class="card-header bg-success text-white">
                <h3 class="bi bi-plus-square-fill"> Crear Tipo de T&eacute;cnico</h3>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="Descripcion" class="form-label">Descripción:</label>
                    <InputText id="Descripcion" class="form-control" @bind-Value="tipoTecnico.Descripcion"></InputText>
                    <ValidationMessage For="@(()=>tipoTecnico.Descripcion)"></ValidationMessage>
                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-success bi bi-check-circle"> Guardar</button>
                    <button type="button" class="btn btn-secondary bi bi-x-circle" @onclick="Cancelar"> Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private TipoTecnico tipoTecnico = new TipoTecnico();

    private async Task CrearTipoTecnico()
    {
        await tipotecnicoService.Guardar(tipoTecnico);
        tipoTecnico = new TipoTecnico();
        navigation.NavigateTo("/TipoTecnico/Index");
    }

    private void Cancelar()
    {
        navigation.NavigateTo("/TipoTecnico/Index");
    }
}

